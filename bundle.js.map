{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://yarn-cd/./src/app/components/table/table.template.js","webpack://yarn-cd/./src/app/lib/utils.js","webpack://yarn-cd/./src/app/lib/engine/engine.js","webpack://yarn-cd/./src/app/components/form/form.tmp.js","webpack://yarn-cd/./src/app/components/form/errorMessages.js","webpack://yarn-cd/./src/app/components/tooltip/formElem.js","webpack://yarn-cd/./src/app/components/form/form.js","webpack://yarn-cd/./src/app/components/table/table.js","webpack://yarn-cd/./src/app/app.js","webpack://yarn-cd/./src/app/controller/controller.js","webpack://yarn-cd/webpack/startup"],"sourcesContent":["const tableRowTd = ([key, value], index) => ({\n    block: 'td',\n    cls: `td__${key}`,\n    content: value,\n    attrs: {\n        id: index,\n    },\n});\n\nconst tableRowT = (note) => ({\n    block: 'tr',\n    cls: 'table__row',\n    content: Object.entries(note).map(tableRowTd),\n});\n\nconst tableT = (notes) => ({\n    block: 'table',\n    cls: 'table',\n    content: notes.map(tableRowT),\n});\n\nexport { tableT, tableRowT };\n","// eslint-disable-next-line import/prefer-default-export\nexport function getRandomInt(min, max) {\n    const minInt = Math.ceil(min);\n    const maxInt = Math.floor(max);\n    return Math.floor(Math.random() * (maxInt - minInt)) + minInt;\n}\n\nexport const noteTransform = (note) => ({\n    title: note.title,\n    cost: note.cost,\n    actions: {\n        block: 'div',\n        cls: 'actions__container',\n        content: [\n            {\n                block: 'div',\n                cls: 'table__button button__delete',\n            },\n            {\n                block: 'div',\n                cls: 'table__button button__edit',\n            },\n        ],\n    },\n});\n\nexport function goToTable(db) {\n    const notes = Object.values(db);\n    const resultArr = notes.map(noteTransform);\n\n    return resultArr;\n}\n","/* eslint-disable object-curly-newline */\nfunction generateHtml(block, cls, content, attrs) {\n    if (block === 'input' || block === 'img') {\n        return `<${block} ${attrs}${cls}>`;\n    }\n    return `<${block} ${attrs}${cls}>${content}</${block}>`;\n}\n\nexport default function engine(node) {\n    if (!node) return '';\n\n    if (typeof node === 'string') {\n        return node;\n    }\n\n    if (Array.isArray(node)) {\n        let fragment = '';\n\n        node.forEach((b) => {\n            const htmlElement = engine(b);\n            fragment += htmlElement;\n        });\n\n        return fragment;\n    }\n\n    const { block, cls, content, attrs } = node;\n    let htmlAttrs = '';\n    let htmlCls = '';\n\n    if (attrs) {\n        Object.entries(attrs).forEach(([key, value]) => {\n            if (key === 'novalidate' || key === 'required') {\n                htmlAttrs += `${key} `;\n            } else {\n                htmlAttrs += `${key}=\"${value}\"`;\n            }\n        });\n    }\n\n    if (cls) {\n        htmlCls = `class=\"${cls}\"`;\n    }\n\n    const htmlContent = engine(content);\n    const htmlElement = generateHtml(block, htmlCls, htmlContent, htmlAttrs);\n\n    return htmlElement;\n}\n","const rowT = (row) => ({\n    block: 'div',\n    cls: `row row__${row.param}`,\n    content: [\n        {\n            block: 'span',\n            cls: `title title__${row.param}`,\n            content: row.title,\n        },\n        {\n            block: 'input',\n            cls: `input input__${row.param}`,\n            attrs: {\n                required: true,\n                name: row.name,\n                pattern: row.pattern,\n            },\n        },\n    ],\n});\n\nconst rowGen = (note) => {\n    const rowTemplates = [\n        {\n            param: 'name',\n            title: 'Название',\n            name: 'title',\n            type: 'text',\n            pattern: '.+',\n        },\n        {\n            param: 'cost',\n            title: 'Цена',\n            name: 'cost',\n            type: 'text',\n            pattern: '[0-9]+',\n        },\n    ];\n    return rowTemplates.map(rowT);\n};\n\nconst buttonT = (param, title, type) => ({\n    block: 'button',\n    cls: `controls__button ${param}-button`,\n    content: title,\n    attrs: { type },\n});\n\nconst controlsT = {\n    block: 'div',\n    cls: 'controls',\n    content: [buttonT('save', 'Сохранить', 'submit'), buttonT('cancel', 'Отмена', 'button')],\n};\n\nconst formT = {\n    block: 'form',\n    cls: 'form form__active',\n    content: [rowGen(), controlsT],\n    attrs: {\n        novalidate: true,\n    },\n};\n\nexport default formT;\n","const errorMessages = {\n    title: {\n        valueMissing: 'Введите название товара',\n    },\n    cost: {\n        valueMissing: 'Введите стоимость',\n        patternMismatch: 'В этом поле должны быть только цифры',\n    },\n};\n\nexport default errorMessages;\n","/* eslint-disable no-param-reassign */\nimport './tooltip.css';\n\nexport default class FormElement {\n    constructor(node) {\n        this.node = node;\n        this.coords = this.node.getBoundingClientRect();\n    }\n\n    showError(message) {\n        this.hideError();\n\n        const tooltip = document.createElement('div');\n        tooltip.className = 'tooltip form-error';\n        tooltip.textContent = message;\n        document.body.appendChild(tooltip);\n\n        this.position(tooltip);\n        setTimeout(() => tooltip.remove(), 5000);\n\n        this.tooltip = tooltip;\n    }\n\n    position(tooltip) {\n        const tipTop = `${this.coords.top + this.coords.height / 2 - tooltip.offsetHeight / 2 + window.scrollY}px`;\n        tooltip.style.top = tipTop;\n        tooltip.style.left = `${this.coords.right + 10 + window.scrollX}px`;\n    }\n\n    hideError() {\n        if (this.tooltip) this.tooltip.remove();\n    }\n\n    clearField() {\n        this.node.value = '';\n    }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable class-methods-use-this */\nimport './form.css';\nimport formT from './form.tmp';\n\nimport engine from '../../lib/engine/engine';\nimport errorMessages from './errorMessages';\nimport FormElement from '../tooltip/formElem';\n\nexport default class Form {\n    constructor(target) {\n        this.container = document.body;\n        this.render();\n        this.position(target);\n        this.init();\n        this.hide();\n\n        this.node.addEventListener('input', (e) => this.onInput(e));\n\n        this.cancelButton = this.node.querySelector('.cancel-button');\n        this.cancelButton.addEventListener('click', () => this.hide());\n    }\n\n    render() {\n        const html = engine(formT);\n        this.container.insertAdjacentHTML('beforeend', html);\n\n        this.node = this.container.querySelector('.form');\n    }\n\n    position(target) {\n        const targetCoords = target.getBoundingClientRect();\n\n        this.node.style.left = `${targetCoords.left - 10}px`;\n        this.node.style.top = `${targetCoords.top - 110}px`;\n    }\n\n    init() {\n        this.formElems = [...this.node.elements].map((elem) => new FormElement(elem));\n    }\n\n    show(note) {\n        this.node.classList.add('form__active');\n        if (note) {\n            Object.entries(note).forEach(([key, value]) => {\n                const edited = this.formElems.find((input) => input.node.name === key);\n                edited.node.value = value;\n            });\n        }\n    }\n\n    clearFields() {\n        this.formElems.forEach((input) => input.clearField());\n    }\n\n    hide() {\n        this.node.classList.remove('form__active');\n    }\n\n    checkSubmit(e) {\n        e.preventDefault();\n\n        if (this.node.checkValidity()) {\n            this.hide();\n            return true;\n        }\n\n        this.formElems.forEach((elem) => {\n            const { node } = elem;\n            if (node.validity.valid) return;\n\n            const errorMsg = this.getInputError(node);\n            elem.showError(errorMsg);\n        });\n\n        return false;\n    }\n\n    getInputError(node) {\n        const findCallback = (key) => node.validity[key];\n        const field = Object.keys(ValidityState.prototype).find(findCallback);\n        return errorMessages[node.name][field];\n    }\n\n    clearErrors() {\n        this.formElems.forEach((elem) => elem.hideError());\n    }\n\n    onInput(e) {\n        const field = e.target;\n        const formElem = this.findFormElem(field);\n        const errorMsg = this.getInputError(field);\n\n        if (!errorMsg) {\n            formElem.hideError();\n            return false;\n        }\n\n        formElem.showError(errorMsg);\n        return true;\n    }\n\n    findFormElem(node) {\n        return this.formElems.find((elem) => elem.node.name === node.name);\n    }\n\n    getFormData() {\n        return this.formElems.reduce((total, elem) => {\n            const { node } = elem;\n            total[node.name] = node.value;\n            return total;\n        }, {});\n    }\n}\n","/* eslint-disable no-param-reassign */\nimport './table.css';\nimport { tableT, tableRowT } from './table.template';\nimport { noteTransform } from '../../lib/utils';\nimport engine from '../../lib/engine/engine';\n\nimport Form from '../form/form';\n\nexport default class Table {\n    constructor() {\n        this.container = document.querySelector('tbody');\n\n        this.form = new Form(this.container);\n        this.form.node.addEventListener('submit', (e) => this.onFormSubmit(e));\n\n        this.addButton = document.querySelector('.plus-sign');\n        this.addButton.addEventListener('click', () => this.form.show());\n        this.container.addEventListener('click', (e) => this.onEdit(e));\n        this.container.addEventListener('click', (e) => Table.onRemove(e));\n\n        window.addEventListener('beforeunload', () => this.onWindowClose());\n    }\n\n    render(notes) {\n        const html = engine(tableT(notes));\n        this.container.innerHTML = html;\n        this.notes = [...this.container.children];\n    }\n\n    onFormSubmit(e) {\n        this.form.clearErrors();\n        if (this.form.checkSubmit(e)) {\n            const note = this.form.getFormData();\n\n            if (this.edited) {\n                [...this.edited.children].forEach((td) => {\n                    const keyTd = td.className.substring(4);\n\n                    Object.entries(note).forEach(([key, value]) => {\n                        if (key === keyTd) td.textContent = value;\n                    });\n                });\n\n                this.edited = null;\n                return;\n            }\n\n            const noteTmp = noteTransform(note);\n            const newNote = engine(tableRowT(noteTmp));\n            this.container.insertAdjacentHTML('beforeend', newNote);\n\n            this.form.clearFields();\n        }\n    }\n\n    onEdit(e) {\n        if (e.target.classList.contains('button__edit')) {\n            const noteEl = e.target.closest('.table__row');\n            this.edited = noteEl;\n\n            const note = Table.getNoteData(noteEl);\n            this.form.show(note);\n        }\n    }\n\n    static onRemove(e) {\n        if (e.target.classList.contains('button__delete')) {\n            const noteEl = e.target.closest('.table__row');\n            noteEl.remove();\n        }\n    }\n\n    static getNoteData(noteEl) {\n        return [...noteEl.children].reduce((total, td) => {\n            const key = td.className.substring(4);\n            const value = td.textContent;\n\n            if (key !== 'actions') total[key] = value;\n            return total;\n        }, {});\n    }\n}\n","import '../css/defaultStyle.css';\nimport Controller from './controller/controller';\n\nconst controller = new Controller();\n","import Table from '../components/table/table';\nimport db from '../../db.json';\nimport { goToTable } from '../lib/utils';\n\nexport default class Controller {\n    constructor() {\n        window.onload = () => {\n            this.table = new Table();\n            const notes = goToTable(db);\n            this.table.render(notes);\n        };\n    }\n}\n","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[442]();\n"],"names":["tableRowTd","index","key","value","block","cls","content","attrs","id","tableRowT","note","Object","entries","map","noteTransform","title","cost","actions","engine","node","Array","isArray","fragment","forEach","b","htmlElement","htmlAttrs","htmlCls","generateHtml","rowT","row","param","required","name","pattern","buttonT","type","controlsT","novalidate","valueMissing","patternMismatch","FormElement","this","coords","getBoundingClientRect","message","hideError","tooltip","document","createElement","className","textContent","body","appendChild","position","setTimeout","remove","tipTop","top","height","offsetHeight","window","scrollY","style","left","right","scrollX","Form","target","container","render","init","hide","addEventListener","e","onInput","cancelButton","querySelector","html","formT","insertAdjacentHTML","targetCoords","formElems","elements","elem","classList","add","find","input","clearField","preventDefault","checkValidity","validity","valid","errorMsg","getInputError","showError","field","keys","ValidityState","prototype","errorMessages","formElem","findFormElem","reduce","total","Table","form","onFormSubmit","addButton","show","onEdit","onRemove","onWindowClose","contains","closest","noteEl","children","td","substring","notes","tableT","innerHTML","clearErrors","checkSubmit","getFormData","edited","keyTd","noteTmp","newNote","clearFields","getNoteData","onload","table","db","values","__webpack_modules__"],"sourceRoot":""}